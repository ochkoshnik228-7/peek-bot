import os
import requests
from flask import Flask, request

# –¢–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù"
CHAT_ID = "–¢–í–û–ô_CHAT_ID"

# HLTV API
HLTV_API_URL = "https://hltv-api.vercel.app/api/matches"

app = Flask(__name__)

def send_message(text):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {"chat_id": CHAT_ID, "text": text, "parse_mode": "HTML"}
    requests.post(url, json=payload)

def get_upcoming_matches():
    try:
        response = requests.get(HLTV_API_URL)
        matches = response.json()
        upcoming = []
        for match in matches:
            if match.get("status") == "upcoming":
                upcoming.append(match)
        return upcoming
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ HLTV: {e}")
        return []

@app.route("/")
def home():
    return "HLTV –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route("/check_matches", methods=["GET"])
def check_matches():
    matches = get_upcoming_matches()
    if not matches:
        send_message("–ù–µ—Ç –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –º–∞—Ç—á–µ–π CS:GO –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
    else:
        for m in matches:
            team1 = m.get("team1", {}).get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            team2 = m.get("team2", {}).get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            event = m.get("event", {}).get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            time = m.get("date", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            send_message(f"üì¢ <b>–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–π –º–∞—Ç—á</b>\nüèÜ {event}\n‚öî {team1} vs {team2}\nüïí {time}")
    return "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)


